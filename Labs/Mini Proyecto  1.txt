UNIVERSIDAD TECNOL√ìGICA
FACULTAD DE INGENIER√çA EN SISTEMAS COMPUTACIONALES
CAMPUS VICTOR LEVIS SASSO
INGENIER√çA WEB
Gu√≠a de Laboratorio ‚Äì Mini Proyecto #2
de Sentencias de Control y Clases
INSTRUCTOR: Ing. Irina Fong
Fecha de Entrega:

Grupo:

Fecha L√≠mite de entrega: [SOLO EN ESTE PER√çODO]
Del 22 al 03 de septiembre de 2025.
Nota de Charla
Estudiante #1

Estudiante #2

Nota de Investigaci√≥n y C√≥digo Fuente

Estudiante #1

Estudiante #2

A.

T√≠tulo de la experiencia

‚ÄúResolviendo problemas con estructuras de decisi√≥n y repetici√≥n en PHP‚Äù
B.

Tema

Sentencias de control (if, case), operadores ternarios y estructuras repetitivas
(while, for, foreach), arreglos, funciones y clases.
C.

Objetivo

Objetivo General
Construir aplicaciones web aplicando t√©cnicas, metodolog√≠as y herramientas de
dise√±o y desarrollo que permita la optimizaci√≥n, facilidad de mantenimiento,
cumpliendo los criterios de usabilidad y accesibilidad.
Elaborado por: Ing. Irina Fong
P√°gina 1 de
13

Objetivos Espec√≠ficos:
Aplicar estructuras de control condicional y repetitiva, funciones matem√°ticas,
funciones de validaci√≥n, clases con m√©todos est√°ticos, para resolver problemas
algor√≠tmicos, utilizando buenas pr√°cticas de programaci√≥n como las
recomendaciones de PSR-1.

Elaborado por: Ing. Irina Fong
13

P√°gina 2 de

D.

Metodolog√≠a

En Grupo de dos estudiantes resolver√°n una serie de problemas que requieren el
uso de estructuras como if, case, while, for, foreach, swtich, arreglos, funciones y
clases. Cada problema deber√° resolverse mediante el lenguaje de programaci√≥n
PHP. Se evaluar√° no solo la l√≥gica del algoritmo, sino tambi√©n su claridad, estilo y
nomenclatura utilizada (camelCase para nombres de m√©todos/procedimientos,
camelCase para variables).
(PSR-1: Basic Coding Standard (Status: Accepted)
Este est√°ndar comprende como deber√≠a ser la codificaci√≥n de los elementos
necesarios para asegurar la interoperabilidad de c√≥digo compartido. Es decir,
indican normas de codificaci√≥n b√°sica a muy bajo nivel.
1. clases (StudlyCaps) o m√©todos (camelCase).
Ejemplo:
class UsuarioInvalidoException {}
class GestorDeSesiones {}
2. M√©todos [Deben declararse en camelCase]
public function imprimirError() {}
public function obtenerDatosUsuario() {}
3. Constantes
const VERSION_APP = '1.0.0';
const MAX_INTENTOS = 5
4. Funciones y variables (Aunque PSR-1 no obliga, por
convenci√≥n se recomienda )
$notaFinal = 85;
$listaEstudiantes = [];

Elaborado por: Ing. Irina Fong
13

P√°gina 3 de

Entregables (Comprimido ZIP,RAR en Moodle)

Informe o Memoria
del Trabajo

Enlace del repositorio.
Ubicar Taller_
SiglasdelosIntegrantes.

Power Point u otro
formato de
presentaci√≥n.

1. Informe o memoria del trabajo: PDF
El informe escrito debe detallar lo siguiente:
o

Portada

o

√çndice

o

Introducci√≥n

o

Metodolog√≠a

o

Definici√≥n de Funciones Matem√°ticas, Cadenas y de Validaci√≥n de
Datos.

o

Lecciones aprendidas o dificultades enfrentadas.

o

Captura de pantalla de la ejecuci√≥n de cada programa.

o

Debe incluir n√∫meros de p√°ginas.

2. C√≥digo Fuente en PHP.
Facilitar el enlace del repositorio o subir la carpeta en Moodle comprimida.
Documentar el repositorio. Ubicar en el Repositorio tecnolog√≠as utilizadas. Fecha
de Realizaci√≥n, Estudiantes que pertenecen al grupo, correo, curso, y que digan
que pertenecen a la Universidad Tecnol√≥gica de Panam√°. Ubicar una Introducci√≥n,
adem√°s si utilizaron POO, alg√∫n m√©todo est√°tico, documentar algunas funciones
matem√°ticas sqr, ect. Adem√°s funciones para validaci√≥n y sanitizaci√≥n.
3. Presentaci√≥n PowerPoint u otro formato de presentaci√≥n.
‚Ä¢

Una presentaci√≥n con un m√≠nimo de:

Elaborado por: Ing. Irina Fong
13

P√°gina 4 de

o

Portada con datos de ambos estudiantes.

o

Descripci√≥n general del taller.

o

Descripci√≥n del Problema (con capturas del c√≥digo).

o

Capturas de Pantallas de los Problemas con sus soluciones.

o

Dise√±o visual limpio y coherente.

o

Im√°genes claras y visibles.

o

Capturas de c√≥digos claros y visibles.

o

Conclusiones o reflexiones del equipo.

3. Demostraci√≥n en vivo (Explicar su c√≥digo fuente con claridad).
Ejecuci√≥n al azar de 4 problemas.
4. Utilizaci√≥n oportuna de las estructuras de control repetitivas. Utilice switch.
https://codersfree.com/posts/operadores-ternarios-en-php
6. Se tomar√° en cuenta que el c√≥digo tenga un footer con la fecha del d√≠a que se
ejecute, esto debe ser incluido como un archivo externo.
7. Se tomar√° en cuenta que utilice funciones de validaci√≥n de datos (preg_match,
filter_var, htmlspecialchar).
https://www.php.net/manual/es/function.preg-match.php
https://www.php.net/manual/es/function.htmlspecialchars.php
https://www.php.net/manual/es/function.filter-var.php

Elaborado por: Ing. Irina Fong
13

P√°gina 5 de

8. Utilizar formularios.
9. Utilizar clases de utilidades con m√©todos est√°ticos.

9. Realizar un men√∫ que permita seleccionar el problema.
10. Utilizar un enlace para volver al men√∫ principal. Que ese enlace est√© en una
funci√≥n, pasar el par√°metro URL. (Navegaci√≥n)

Elaborado por: Ing. Irina Fong
13

P√°gina 6 de

üìÑ Enunciado de los problemas
Calcular la media, desviaci√≥n
est√°ndar, el n√∫mero min y el
m√°x de los 5 primeros
n√∫meros positivos introducidos
a partir de un formulario.

‚Ä¢

Imprimir los N ‚Äì
primeros m√∫ltiplos de 4,
d√≥nde N es un valor
introducido por teclado.
(4*1=4;
4*2=;4*3=)‚Ä¶Desborda
miento?

Pedir la cantidad de notas que
desea ingresar el usuario.
Luego pedir esas notas y
calcular el promedio, la
desviaci√≥n est√°ndar, la nota,
m√≠nima y la m√°xima. Usar
foreach (o un ciclo que recorra
una colecci√≥n).

.

Problema #2

Leer la edad de 5 personas y
clasificar cada una en una
categor√≠a: ni√±o (0-12),
adolescente (13-17), adulto
(18-64), adulto mayor (65+).

En un hospital existen tres
√°reas: Ginecolog√≠a, Pediatr√≠a y
Traumatolog√≠a. El presupuesto
anual del hospital se reparte
conforme a la siguiente tabla

Generar Estad√≠sticas si se
repiten las edades. Integrar
gr√°ficas.

Problema #4
Calculadora de Datos
Estad√≠sticos

500500 problema #2

Problema #3
Problema #1

Se desea calcular
independientemente la suma
de los n√∫mero pares e
impares comprendidos entre 1
y 200.

Calcular la suma de los
n√∫meros del 1 al 1,000.

Ver Referencia p√°gina #7
Integrar Gr√°ficas.

Problema #5

Problema #6

Estaci√≥n del A√±o

Solicitar un n√∫mero (1 al 9)

Al ingresar la fecha, devolver
la estaci√≥n de a√±o de acuerdo
con la siguiente tabla (ver
imagen de la estaci√≥n del A√±o)

Generar o imprimir las
15 primeras potencias
del n√∫mero ( 4 elevado
a la 1, 4 elevado a la
dos, ‚Ä¶.

Ver Referencia p√°gina #7
Datos prueba.
Problema #8

Problema #9
Problema #9

Problema #7

Elaborado por: Ing. Irina Fong
13

P√°gina 7 de

Utilice un arreglo bidimensional para resolver el siguiente problema.
Una empresa tiene cuatro vendedores (1 al 4) que venden cinco productos diferentes (1 al 5).
Una vez al d√≠a, cada empleado pasa en una nota para cada tipo diferente de producto
vendido. Cada hoja contiene lo siguiente:

a) El n√∫mero del vendedor
b) El n√∫mero de producto
c) El valor total en d√≥lares de ese producto vendido ese d√≠a
As√≠, cada vendedor pasa entre 0 y 5 notas de ventas por d√≠a. Suponga que est√° disponible la
informaci√≥n sobre todas las notas del mes pasado. Escriba un programa que lea toda esa
informaci√≥n para las ventas del √∫ltimo mes (los datos de un vendedor a la vez (Nombre,
Apellido, N√∫mero de Vendedor) y que resuma las ventas totales por vendedor, por producto.
Todos los totales deben guardarse en el arreglo bidimensional ventas. Despu√©s de procesar
toda la informaci√≥n del mes pasado, muestre los resultados en formato tabular, en donde cada
columna representa a un vendedor espec√≠fico y cada fila representa un producto. Saque el
total de cada fila para obtener las ventas totales de cada producto durante el √∫ltimo mes. Saque
el total de cada columna para obtener las ventas totales por cada vendedor durante el √∫ltimo
mes. Su impresi√≥n tabular debe incluir estos totales cruzadas a la derecha de las filas
totalizadas y en la parte inferior de las columnas totalizadas.
Problema #10

Elaborado por: Ing. Irina Fong
13

P√°gina 8 de

√Årea

Porcentaje del presupuesto

Ginecolog√≠a

40%

Traumatolog√≠a

35%

Pediatr√≠a

25%

En un hospital existen tres √°reas: Ginecolog√≠a, Pediatr√≠a y Traumatolog√≠a. El
presupuesto anual del hospital se reparte conforme a la siguiente tabla.

Elaborado por: Ing. Irina Fong
13

P√°gina 9 de

Elaborado por: Ing. Irina Fong
13

P√°gina 10 de

Salidas Esperadas:

Elaborado por: Ing. Irina Fong
13

P√°gina 11 de

Elaborado por: Ing. Irina Fong
13

P√°gina 12 de

Ap√©ndice A. Secuencias de comandos entre sitios (XSS)
Las vulnerabilidades de scripts entre sitios (XSS) se producen cuando un atacante puede
inyectar scripts maliciosos en una aplicaci√≥n web. Esto puede ocurrir cuando la entrada del
usuario no se depura ni valida adecuadamente. Los ataques XSS pueden provocar el robo
de datos, el robo de cookies o incluso la vulneraci√≥n total del sistema.
Para evitar ataques XSS en aplicaciones PHP, debes:
‚Ä¢

Utilice la funci√≥n htmlspecialchars() de PHP para codificar la entrada del usuario y
evitar la ejecuci√≥n de scripts.

A continuaci√≥n, se muestra un ejemplo de c√≥mo utilizar la funci√≥n htmlspecialchars() de
PHP para evitar ataques XSS:
echo 'Hola ' . htmlspecialchars ( $_GET [ "nombre" ]) . '!' ;
Referencia: https://medium.com/@khalidzeiter/php-owasp-top-10-essential-steps-forkeeping-your-web-application-safe-and-secure-72b5e7e55523

Ap√©ndice B. Top 10 Web Application Security Risks
https://owasp.org/www-project-top-ten/

Elaborado por: Ing. Irina Fong
13

P√°gina 13 de

